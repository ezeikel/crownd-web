enum Permission {
  ADMIN
  USER
  PERMISSIONUPDATE
}

enum Gender {
  MALE
  FEMALE
  NONBINARY
  NOTSPECIFIED
}

enum ContentType {
  IMAGE
  VIDEO
}

type User {
  id: ID! @id
  name: String
  username: String! @unique
  profilePicture: Content!
  website: String
  bio: String @default(value: "This is the default bio for everyone üìù")
  email: String! @unique
  phoneNumber: Int
  gender: Gender! @default(value: NOTSPECIFIED)
  following: [User!]! @relation(name: "Following", link: INLINE)
  followers: [User!]! @relation(name: "Followers", link: INLINE)
  likes: [Like!]! @relation(name: "UserLikes")
  comments: [Comment!]! @relation(name: "UserComments")
  password: String!
  resetToken: String
  resetTokenExpiry: String
  posts: [Post!]! @relation(name: "Posts")
  verified: Boolean! @default(value: false)
  permissions: [Permission!]! @default(value: USER)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  author: User @relation(name: "Posts", link: INLINE) # Removed require for now due to https://github.com/prisma/prisma/issues/3796
  content: Content!
  caption: String
  location: Location
  published: Boolean @default(value: false)
  likes: [Like!]! @relation(name: "PostLikes")
  comments: [Comment!]! @relation(name: "PostComments")
  createdAt: DateTime! @createdAt
}

type Location @embedded {
  latitude: Float!
  longitude: Float!
}

type Content @embedded {
  type: ContentType! @default(value: IMAGE)
  url: String
  publicId: String
}

type Like {
  id: ID! @id
  user: User @relation(name: "UserLikes", link: INLINE) # Removed require for now due to https://github.com/prisma/prisma/issues/3796
  post: Post @relation(name: "PostLikes", link: INLINE) # Removed require for now due to https://github.com/prisma/prisma/issues/3796
  createdAt: DateTime! @createdAt
}

type Comment {
  id: ID! @id
  post: Post @relation(name: "PostComments", link: INLINE) # Removed require for now due to https://github.com/prisma/prisma/issues/3796
  text: String!
  writtenBy: User! @relation(name: "UserComments", link: INLINE)
  createdAt: DateTime! @createdAt
}

 type File {
   id: ID! @id
   filename: String!
   mimetype: String!
   encoding: String!
 }
